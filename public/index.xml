<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>诗芮爸爸的博客</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on 诗芮爸爸的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 21 Nov 2021 21:00:00 +0800</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>00Go学习准备</title>
      <link>http://localhost:1313/post/00go%E5%AD%A6%E4%B9%A0%E5%87%86%E5%A4%87/</link>
      <pubDate>Sun, 21 Nov 2021 21:00:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/00go%E5%AD%A6%E4%B9%A0%E5%87%86%E5%A4%87/</guid>
      <description>0、为什么你应该学习Go语言 0.1、什么是Go语言  Google开源 编译型语言 21世界的C语言  0.2、Go语言的特点  简单易学习 开发效率高 执行性能好  0.3、为什么应该学习Go语言  机会多 薪资高 发展好  1、从零开始搭建Go语言开发环境 1.1、下载 下载地址 Go官网下载地址：https://golang.org/dl/
Go官网镜像站（推荐）：https://golang.google.cn/dl/
1.2、安装 参照官方网站
输入go version，验证安装成功
1.3、GOROOT和GOPATH、GOPROXY 环境变量配置GOPATH，在此目录下新建三个文件夹bin src pkg；PATH环境变量追加 E:\go\bin
查看Go配置 go env，配置国内镜像go env -w GOPROXY=https://goproxy.cn,direct
1.4、Go开发编辑器 VS Code是微软开源的编辑器，而Goland是jetbrains出品的付费IDE。
VS Code官方下载地址：https://code.visualstudio.com/Download
插件安装：Chinese包、Go扩展
1.5、第一个Go程序 使用go module模式新建项目时，我们需要通过go mod init 项目名命令对项目进行初始化，该命令会在项目根目录下生成go.mod文件。
go mod tidy命令更新go.mod中的依赖关系
package main // 声明 main 包，表明当前是一个可执行程序  import &amp;#34;fmt&amp;#34; // 导入内置 fmt 包  func main(){ // main函数，是程序执行的入口 	fmt.</description>
    </item>
    
    <item>
      <title>01变量与常量</title>
      <link>http://localhost:1313/post/01%E5%8F%98%E9%87%8F%E4%B8%8E%E5%B8%B8%E9%87%8F/</link>
      <pubDate>Sun, 21 Nov 2021 21:00:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/01%E5%8F%98%E9%87%8F%E4%B8%8E%E5%B8%B8%E9%87%8F/</guid>
      <description>1、标识符与关键字 Go语言中标识符由字母数字和_(下划线）组成，并且只能以字母和_开头。
Go语言中有25个关键字：
break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var 此外，Go语言中还有37个保留字。
Constants: true false iota nil Types: int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 uintptr float32 float64 complex64 complex128 bool byte rune string error Functions: make len cap new append copy close delete complex real imag panic recover 2、变量 2.</description>
    </item>
    
    <item>
      <title>02数据类型</title>
      <link>http://localhost:1313/post/02%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Sun, 21 Nov 2021 21:00:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/02%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>整型、浮点型、布尔型、字符串、数组、切片、结构体、函数、map、通道（channel）
1、整形    类型 描述     uint8 无符号 8位整型 (0 到 255)   uint16 无符号 16位整型 (0 到 65535)   uint32 无符号 32位整型 (0 到 4294967295)   uint64 无符号 64位整型 (0 到 18446744073709551615)   int8 有符号 8位整型 (-128 到 127)   int16 有符号 16位整型 (-32768 到 32767)   int32 有符号 32位整型 (-2147483648 到 2147483647)   int64 有符号 64位整型 (-9223372036854775808 到 9223372036854775807)   uint 32位操作系统上就是uint32，64位操作系统上就是uint64   int 32位操作系统上就是int32，64位操作系统上就是int64   uintptr 无符号整型，用于存放一个指针    uint8对应C语言中的byte型，代表了ASCII码的一个字符</description>
    </item>
    
    <item>
      <title>03运算符</title>
      <link>http://localhost:1313/post/03%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Sun, 21 Nov 2021 21:00:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/03%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>1、算术运算符    运算符 描述     + 相加   - 相减   * 相乘   / 相除   % 求余    注意： ++（自增）和--（自减）在Go语言中是单独的语句，并不是运算符。
2、关系运算符    运算符 描述     == 检查两个值是否相等，如果相等返回 True 否则返回 False。   != 检查两个值是否不相等，如果不相等返回 True 否则返回 False。   &amp;gt; 检查左边值是否大于右边值，如果是返回 True 否则返回 False。   &amp;gt;= 检查左边值是否大于等于右边值，如果是返回 True 否则返回 False。   &amp;lt; 检查左边值是否小于右边值，如果是返回 True 否则返回 False。   &amp;lt;= 检查左边值是否小于等于右边值，如果是返回 True 否则返回 False。    3、逻辑运算符    运算符 描述     &amp;amp;&amp;amp; 逻辑 AND 运算符。 如果两边的操作数都是 True，则为 True，否则为 False。   || 逻辑 OR 运算符。 如果两边的操作数有一个 True，则为 True，否则为 False。   !</description>
    </item>
    
    <item>
      <title>04流程控制</title>
      <link>http://localhost:1313/post/04%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Sun, 21 Nov 2021 21:00:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/04%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</guid>
      <description>Go语言中最常用的流程控制有if和for，而switch和goto主要是为了简化代码、降低重复代码而生的结构，属于扩展类的流程控制。
1、if else 1.1、if条件判断基本写法 Go语言中if条件判断的格式如下：
if 表达式1 { 分支1 } else if 表达式2 { 分支2 } else{ 分支3 } 1.2、if条件判断特殊写法 if条件判断还有一种特殊的写法，可以在 if 表达式之前添加一个执行语句，再根据变量值进行判断，举个例子：
func ifDemo2() { if score := 65; score &amp;gt;= 90 { fmt.Println(&amp;#34;A&amp;#34;) } else if score &amp;gt; 75 { fmt.Println(&amp;#34;B&amp;#34;) } else { fmt.Println(&amp;#34;C&amp;#34;) } } 2、for循环 Go 语言中的所有循环类型均可以使用for关键字来完成。
or循环的基本格式如下：
for 初始语句;条件表达式;结束语句{ 循环体语句 } 无限循环 for { 循环体语句 } for循环可以通过break、goto、return、panic语句强制退出循环。
3、for range Go语言中可以使用for range遍历数组、切片、字符串、map 及通道（channel）。 通过for range遍历的返回值有以下规律：</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Tue, 10 Mar 2015 00:13:27 +0000</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description>《Go 实战笔记》系列作者，《Golang Gin 实战》系列作者，《Android Gradle权威指南》作者，现负责技术管理。
Android Gradle权威指南
公众号，扫码关注
</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>http://localhost:1313/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>http://localhost:1313/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
